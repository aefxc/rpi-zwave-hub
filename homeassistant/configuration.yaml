homeassistant:
  name: ZHub
  time_zone: America/Chicago

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  # Uncomment this to add a password (recommended!)
  # api_password: !secret api_password

sensor:
  - platform: uptime

logger:
  default: info
  # logs:
  #   homeassistant.components.zwave: debug

zwave:
  usb_path: /dev/ttyAMA0
  network_key: !secret zwave_network_key

mqtt:
  broker: mqtt.blakeshome.com
  birth_message:
    topic: 'homeassistant_hub/status'
    payload: 'online'
    retain: true
  will_message:
    topic: 'homeassistant_hub/status'
    payload: 'offline'
    retain: true

mqtt_control:
  base_topic: homeassistant_hub/

cooper_controllers:

python_script:

automation:
  - alias: Publish offline message when shutting down
    trigger:
      platform: homeassistant
      event: shutdown
    action:
      service: mqtt.publish
      data:
        topic: homeassistant_hub/status
        payload: 'offline'
        retain: true
  - alias: Broadcast zwave.scene_activated events over MQTT
    trigger:
      - platform: event
        event_type: zwave.scene_activated
    action:
      - service: mqtt.publish
        data_template:
          topic: homeassistant_hub/events
          payload: "{{trigger.event.data|tojson}}"
          retain: false
  - alias: Refresh light values after 4 seconds
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: light
    action:
      - service: mqtt.publish
        data_template:
          topic: homeassistant_hub/testing
          payload: "refreshing {{ state_attr(trigger.event.data.service_data.entity_id,'node_id') }}"
          retain: false
      - service: python_script.delay_node_value_refresh
        data_template:
          node_id: "{{ state_attr(trigger.event.data.service_data.entity_id,'node_id') }}"
          value_id: "{{ state_attr(trigger.event.data.service_data.entity_id,'value_id') }}"
          delay: 4
